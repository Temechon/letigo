{"version":3,"sources":["../../js/Game.js"],"names":[],"mappings":";;;;;;;AACA,MAAM,CAAC,gBAAgB,CAAC,kBAAkB,EAAE,YAAW;AACnD,YAAI,IAAI,CAAC,aAAa,CAAC,CAAC;CAC3B,CAAC,CAAC;;IAGG,IAAI;AACK,iBADT,IAAI,CACM,QAAQ,EAAE;;;sCADpB,IAAI;;AAGF,oBAAI,MAAM,GAAY,QAAQ,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC;AACxD,oBAAI,CAAC,MAAM,GAAW,IAAI,OAAO,CAAC,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;;;AAGvD,oBAAI,CAAC,MAAM,GAAI,EAAE,CAAC;;;AAGlB,oBAAI,CAAC,KAAK,GAAK,IAAI,CAAC;;;AAGpB,sBAAM,CAAC,gBAAgB,CAAC,QAAQ,EAAE,YAAM;AACpC,8BAAK,MAAM,CAAC,MAAM,EAAE,CAAC;iBACxB,CAAC,CAAC;;AAEH,oBAAI,CAAC,GAAG,EAAE,CAAC;SAEd;;qBAnBC,IAAI;;uBAoBI,sBAAG;;AAET,4BAAI,KAAK,GAAG,IAAI,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;;AAE3C,4BAAI,MAAM,GAAG,IAAI,OAAO,CAAC,UAAU,CAAC,KAAK,EAAE,IAAI,OAAO,CAAC,OAAO,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC;AAChF,8BAAM,CAAC,SAAS,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,CAAC;AACzC,8BAAM,CAAC,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,kBAAkB,EAAE,CAAC,CAAC;;;AAGvD,4BAAI,CAAC,GAAG,IAAI,OAAO,CAAC,gBAAgB,CAAC,MAAM,EAAE,IAAI,OAAO,CAAC,OAAO,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;AAChF,yBAAC,CAAC,SAAS,GAAG,GAAG,CAAC;AAClB,+BAAO,KAAK,CAAC;iBAChB;;;uBAEE,eAAG;;;AAEF,4BAAI,CAAC,KAAK,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC;;;AAG/B,4BAAI,MAAM,GAAI,IAAI,OAAO,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;;;;;AAKpD,8BAAM,CAAC,QAAQ,GAAG,YAAM;;;AAGpB,uCAAK,SAAS,EAAE,CAAC;;;AAGjB,uCAAK,OAAO,GAAG,IAAI,CAAC;;AAEpB,uCAAK,MAAM,CAAC,aAAa,CAAC,YAAM;AAC5B,+CAAK,KAAK,CAAC,MAAM,EAAE,CAAC;iCACvB,CAAC,CAAC;yBACN,CAAC;;AAEF,8BAAM,CAAC,IAAI,EAAE,CAAC;iBACjB;;;uBAEQ,qBAAG;;AAER,4BAAI,GAAG,GAAG,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,EAAE,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;iBACvD;;;eA/DC,IAAI","file":"Game.js","sourcesContent":["// The function onload is loaded when the DOM has been loaded\r\nwindow.addEventListener(\"DOMContentLoaded\", function() {\r\n    new Game('game-canvas');\r\n});\r\n\r\n\r\nclass Game {\r\n    constructor(canvasId) {\r\n\r\n        let canvas          = document.getElementById(canvasId);\r\n        this.engine         = new BABYLON.Engine(canvas, true);\r\n\r\n        // Contains all loaded assets needed for this state\r\n        this.assets  = [];\r\n\r\n        // The state scene\r\n        this.scene   = null;\r\n\r\n        // Resize window event\r\n        window.addEventListener(\"resize\", () => {\r\n            this.engine.resize();\r\n        });\r\n\r\n        this.run();\r\n\r\n    }\r\n    _initScene() {\r\n\r\n        let scene = new BABYLON.Scene(this.engine);\r\n        // Camera attached to the canvas\r\n        let camera = new BABYLON.FreeCamera(\"cam\", new BABYLON.Vector3(0,5,-10), scene);\r\n        camera.setTarget(BABYLON.Vector3.Zero());\r\n        camera.attachControl(this.engine.getRenderingCanvas());\r\n\r\n        // Hemispheric light to light the scene\r\n        let h = new BABYLON.HemisphericLight(\"hemi\", new BABYLON.Vector3(0,1,0), scene);\r\n        h.intensity = 0.9;\r\n        return scene;\r\n    }\r\n\r\n    run() {\r\n\r\n        this.scene = this._initScene();\r\n\r\n        // The loader\r\n        let loader =  new BABYLON.AssetsManager(this.scene);\r\n\r\n        //    var meshTask = this.loader.addMeshTask(\"skull task\", \"\", \"./assets/\", \"block02.babylon\");\r\n        //    meshTask.onSuccess = this._initMesh;\r\n\r\n        loader.onFinish = () => {\r\n\r\n            // Init the game\r\n            this._initGame();\r\n\r\n            // The state is ready to be played\r\n            this.isReady = true;\r\n\r\n            this.engine.runRenderLoop(() => {\r\n                this.scene.render();\r\n            });\r\n        };\r\n\r\n        loader.load();\r\n    }\r\n\r\n    _initGame() {\r\n\r\n        let box = BABYLON.Mesh.CreateBox('', 1, this.scene);\r\n    }\r\n}\r\n"]}