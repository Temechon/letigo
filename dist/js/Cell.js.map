{"version":3,"sources":["../../js/Cell.js"],"names":[],"mappings":";;;;;;;;;;;;;;IAIM,IAAI;cAAJ,IAAI;;AAEK,aAFT,IAAI,CAEM,IAAI,EAAE;8BAFhB,IAAI;;AAGF,mCAHF,IAAI,6CAGI,IAAI,EAAE;;AAEZ,YAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;AACvC,YAAI,CAAC,IAAI,GAAG,CAAC,CAAC;;;AAGd,YAAI,CAAC,SAAS,GAAG,EAAE,CAAC;;;AAGpB,YAAI,CAAC,SAAS,GAAG,IAAI,CAAC;AACtB,YAAI,CAAC,cAAc,EAAE,CAAC;;AAGtB,YAAI,CAAC,SAAS,GAAG,IAAI,CAAC;;;AAGtB,YAAI,EAAE,GAAG,OAAO,CAAC,UAAU,CAAC,YAAY,CAAC;AACrC,iBAAK,EAAE,IAAI,CAAC,IAAI,EAAG,MAAM,EAAE,IAAI,CAAC,IAAI,EAAE,YAAY,EAAE,CAAC;SACxD,CAAC,CAAC;AACH,UAAE,CAAC,WAAW,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;;AAE5B,YAAI,CAAC,QAAQ,GAAG,IAAI,OAAO,CAAC,gBAAgB,CAAC,EAAE,EAAE,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC;KACrE;;iBAzBC,IAAI;;eA2BQ,0BAAkC;gBAAjC,MAAM,yDAAG,OAAO,CAAC,OAAO,CAAC,IAAI,EAAE;;AAC1C,gBAAI,CAAC,QAAQ,GAAG,MAAM,CAAC;AACvB,gBAAI,EAAE,GAAG,IAAI,CAAC,IAAI,GAAC,CAAC,CAAC;AACrB,gBAAI,CAAC,SAAS,GAAG,CACb,IAAI,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAC,EAAE,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAC,EAAE,CAAC,EAC5E,IAAI,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAC,EAAE,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAC,EAAE,CAAC,EAC5E,IAAI,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAC,EAAE,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAC,EAAE,CAAC,EAC5E,IAAI,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAC,EAAE,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAC,EAAE,CAAC,CAC/E,CAAC;SACL;;;WApCC,IAAI;GAAS,UAAU","file":"Cell.js","sourcesContent":["/**\r\n * A cell is a block divided in 4 part where buildings can spawn.\r\n * The Game instance will keep the link between cell, positions and buildings.\r\n */\r\nclass Cell extends GameObject{\r\n\r\n    constructor(game) {\r\n        super(game);\r\n\r\n        this.position = BABYLON.Vector3.Zero();\r\n        this.size = 4;\r\n\r\n        // The list of building available on this cell\r\n        this.buildings = [];\r\n\r\n        // Positions available on this cell\r\n        this.positions = null;\r\n        this.updatePosition();\r\n\r\n\r\n        this.isVisible = true;\r\n\r\n        // A cell is a squared plane\r\n        var vd = BABYLON.VertexData.CreateGround({\r\n            width: this.size,  height: this.size, subdivisions: 1\r\n        });\r\n        vd.applyToMesh(this, false);\r\n\r\n        this.material = new BABYLON.StandardMaterial(\"\", this.getScene());\r\n    }\r\n\r\n    updatePosition(newpos = BABYLON.Vector3.Zero()) {\r\n        this.position = newpos;\r\n        let hf = this.size/4;\r\n        this.positions = [\r\n            new BABYLON.Vector3(this.position.x-hf, this.position.y, this.position.z-hf),\r\n            new BABYLON.Vector3(this.position.x-hf, this.position.y, this.position.z+hf),\r\n            new BABYLON.Vector3(this.position.x+hf, this.position.y, this.position.z-hf),\r\n            new BABYLON.Vector3(this.position.x+hf, this.position.y, this.position.z+hf)\r\n        ];\r\n    }\r\n\r\n}"]}